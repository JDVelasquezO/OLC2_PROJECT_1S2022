// Code generated from ProjectLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 79, 522,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3,
	20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21,
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3,
	23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3,
	26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28,
	3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33,
	3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3,
	34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34,
	3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3,
	35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37,
	3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 6, 38, 373, 10, 38, 13, 38, 14,
	38, 374, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39,
	6, 39, 386, 10, 39, 13, 39, 14, 39, 387, 3, 39, 3, 39, 3, 40, 6, 40, 393,
	10, 40, 13, 40, 14, 40, 394, 3, 41, 6, 41, 398, 10, 41, 13, 41, 14, 41,
	399, 3, 41, 3, 41, 6, 41, 404, 10, 41, 13, 41, 14, 41, 405, 3, 42, 3, 42,
	3, 42, 3, 42, 3, 43, 3, 43, 7, 43, 414, 10, 43, 12, 43, 14, 43, 417, 11,
	43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44,
	3, 44, 5, 44, 430, 10, 44, 3, 45, 3, 45, 7, 45, 434, 10, 45, 12, 45, 14,
	45, 437, 11, 45, 3, 46, 3, 46, 3, 47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49,
	3, 50, 3, 50, 3, 51, 3, 51, 3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 54, 3,
	54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 57, 3, 57, 3, 58, 3, 58,
	3, 59, 3, 59, 3, 60, 3, 60, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 3, 63, 3,
	63, 3, 63, 3, 64, 3, 64, 3, 65, 3, 65, 3, 66, 3, 66, 3, 66, 3, 67, 3, 67,
	3, 67, 3, 68, 3, 68, 3, 69, 3, 69, 3, 70, 3, 70, 3, 71, 3, 71, 3, 72, 3,
	72, 3, 73, 3, 73, 3, 73, 3, 74, 3, 74, 3, 74, 3, 75, 3, 75, 3, 76, 3, 76,
	3, 76, 3, 77, 3, 77, 3, 78, 6, 78, 514, 10, 78, 13, 78, 14, 78, 515, 3,
	78, 3, 78, 3, 79, 3, 79, 3, 79, 2, 2, 80, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7,
	13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31,
	17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49,
	26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67,
	35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85,
	44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103,
	53, 105, 54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119,
	61, 121, 62, 123, 63, 125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135,
	69, 137, 70, 139, 71, 141, 72, 143, 73, 145, 74, 147, 75, 149, 76, 151,
	77, 153, 78, 155, 79, 157, 2, 3, 2, 10, 3, 2, 49, 49, 3, 2, 12, 12, 3,
	2, 50, 59, 3, 2, 36, 36, 7, 2, 67, 92, 97, 97, 99, 124, 211, 211, 243,
	243, 8, 2, 50, 59, 67, 92, 97, 97, 99, 124, 211, 211, 243, 243, 5, 2, 11,
	12, 15, 15, 34, 34, 9, 2, 34, 35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66,
	93, 95, 2, 529, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2,
	9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2,
	2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2,
	2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2,
	2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3,
	2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47,
	3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2,
	55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2,
	2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2,
	2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2,
	2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3,
	2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93,
	3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2,
	101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2,
	2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115,
	3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3, 2, 2, 2,
	2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2, 129, 3,
	2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2, 2,
	137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141, 3, 2, 2, 2, 2, 143, 3, 2,
	2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2, 2, 2, 2, 149, 3, 2, 2, 2, 2, 151,
	3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 155, 3, 2, 2, 2, 3, 159, 3, 2, 2, 2,
	5, 167, 3, 2, 2, 2, 7, 173, 3, 2, 2, 2, 9, 177, 3, 2, 2, 2, 11, 181, 3,
	2, 2, 2, 13, 188, 3, 2, 2, 2, 15, 192, 3, 2, 2, 2, 17, 196, 3, 2, 2, 2,
	19, 201, 3, 2, 2, 2, 21, 206, 3, 2, 2, 2, 23, 211, 3, 2, 2, 2, 25, 214,
	3, 2, 2, 2, 27, 217, 3, 2, 2, 2, 29, 222, 3, 2, 2, 2, 31, 228, 3, 2, 2,
	2, 33, 234, 3, 2, 2, 2, 35, 239, 3, 2, 2, 2, 37, 243, 3, 2, 2, 2, 39, 246,
	3, 2, 2, 2, 41, 252, 3, 2, 2, 2, 43, 261, 3, 2, 2, 2, 45, 268, 3, 2, 2,
	2, 47, 272, 3, 2, 2, 2, 49, 277, 3, 2, 2, 2, 51, 287, 3, 2, 2, 2, 53, 296,
	3, 2, 2, 2, 55, 301, 3, 2, 2, 2, 57, 304, 3, 2, 2, 2, 59, 311, 3, 2, 2,
	2, 61, 315, 3, 2, 2, 2, 63, 319, 3, 2, 2, 2, 65, 323, 3, 2, 2, 2, 67, 334,
	3, 2, 2, 2, 69, 353, 3, 2, 2, 2, 71, 360, 3, 2, 2, 2, 73, 364, 3, 2, 2,
	2, 75, 368, 3, 2, 2, 2, 77, 381, 3, 2, 2, 2, 79, 392, 3, 2, 2, 2, 81, 397,
	3, 2, 2, 2, 83, 407, 3, 2, 2, 2, 85, 411, 3, 2, 2, 2, 87, 429, 3, 2, 2,
	2, 89, 431, 3, 2, 2, 2, 91, 438, 3, 2, 2, 2, 93, 440, 3, 2, 2, 2, 95, 442,
	3, 2, 2, 2, 97, 444, 3, 2, 2, 2, 99, 446, 3, 2, 2, 2, 101, 448, 3, 2, 2,
	2, 103, 450, 3, 2, 2, 2, 105, 452, 3, 2, 2, 2, 107, 455, 3, 2, 2, 2, 109,
	458, 3, 2, 2, 2, 111, 461, 3, 2, 2, 2, 113, 463, 3, 2, 2, 2, 115, 465,
	3, 2, 2, 2, 117, 467, 3, 2, 2, 2, 119, 469, 3, 2, 2, 2, 121, 471, 3, 2,
	2, 2, 123, 473, 3, 2, 2, 2, 125, 476, 3, 2, 2, 2, 127, 479, 3, 2, 2, 2,
	129, 481, 3, 2, 2, 2, 131, 483, 3, 2, 2, 2, 133, 486, 3, 2, 2, 2, 135,
	489, 3, 2, 2, 2, 137, 491, 3, 2, 2, 2, 139, 493, 3, 2, 2, 2, 141, 495,
	3, 2, 2, 2, 143, 497, 3, 2, 2, 2, 145, 499, 3, 2, 2, 2, 147, 502, 3, 2,
	2, 2, 149, 505, 3, 2, 2, 2, 151, 507, 3, 2, 2, 2, 153, 510, 3, 2, 2, 2,
	155, 513, 3, 2, 2, 2, 157, 519, 3, 2, 2, 2, 159, 160, 7, 114, 2, 2, 160,
	161, 7, 116, 2, 2, 161, 162, 7, 107, 2, 2, 162, 163, 7, 112, 2, 2, 163,
	164, 7, 118, 2, 2, 164, 165, 7, 110, 2, 2, 165, 166, 7, 112, 2, 2, 166,
	4, 3, 2, 2, 2, 167, 168, 7, 114, 2, 2, 168, 169, 7, 116, 2, 2, 169, 170,
	7, 107, 2, 2, 170, 171, 7, 112, 2, 2, 171, 172, 7, 118, 2, 2, 172, 6, 3,
	2, 2, 2, 173, 174, 7, 110, 2, 2, 174, 175, 7, 103, 2, 2, 175, 176, 7, 118,
	2, 2, 176, 8, 3, 2, 2, 2, 177, 178, 7, 111, 2, 2, 178, 179, 7, 119, 2,
	2, 179, 180, 7, 118, 2, 2, 180, 10, 3, 2, 2, 2, 181, 182, 7, 85, 2, 2,
	182, 183, 7, 118, 2, 2, 183, 184, 7, 116, 2, 2, 184, 185, 7, 107, 2, 2,
	185, 186, 7, 112, 2, 2, 186, 187, 7, 105, 2, 2, 187, 12, 3, 2, 2, 2, 188,
	189, 7, 107, 2, 2, 189, 190, 7, 56, 2, 2, 190, 191, 7, 54, 2, 2, 191, 14,
	3, 2, 2, 2, 192, 193, 7, 104, 2, 2, 193, 194, 7, 56, 2, 2, 194, 195, 7,
	54, 2, 2, 195, 16, 3, 2, 2, 2, 196, 197, 7, 100, 2, 2, 197, 198, 7, 113,
	2, 2, 198, 199, 7, 113, 2, 2, 199, 200, 7, 110, 2, 2, 200, 18, 3, 2, 2,
	2, 201, 202, 7, 101, 2, 2, 202, 203, 7, 106, 2, 2, 203, 204, 7, 99, 2,
	2, 204, 205, 7, 116, 2, 2, 205, 20, 3, 2, 2, 2, 206, 207, 7, 40, 2, 2,
	207, 208, 7, 117, 2, 2, 208, 209, 7, 118, 2, 2, 209, 210, 7, 116, 2, 2,
	210, 22, 3, 2, 2, 2, 211, 212, 7, 99, 2, 2, 212, 213, 7, 117, 2, 2, 213,
	24, 3, 2, 2, 2, 214, 215, 7, 107, 2, 2, 215, 216, 7, 104, 2, 2, 216, 26,
	3, 2, 2, 2, 217, 218, 7, 103, 2, 2, 218, 219, 7, 110, 2, 2, 219, 220, 7,
	117, 2, 2, 220, 221, 7, 103, 2, 2, 221, 28, 3, 2, 2, 2, 222, 223, 7, 111,
	2, 2, 223, 224, 7, 99, 2, 2, 224, 225, 7, 118, 2, 2, 225, 226, 7, 101,
	2, 2, 226, 227, 7, 106, 2, 2, 227, 30, 3, 2, 2, 2, 228, 229, 7, 121, 2,
	2, 229, 230, 7, 106, 2, 2, 230, 231, 7, 107, 2, 2, 231, 232, 7, 110, 2,
	2, 232, 233, 7, 103, 2, 2, 233, 32, 3, 2, 2, 2, 234, 235, 7, 110, 2, 2,
	235, 236, 7, 113, 2, 2, 236, 237, 7, 113, 2, 2, 237, 238, 7, 114, 2, 2,
	238, 34, 3, 2, 2, 2, 239, 240, 7, 104, 2, 2, 240, 241, 7, 113, 2, 2, 241,
	242, 7, 116, 2, 2, 242, 36, 3, 2, 2, 2, 243, 244, 7, 107, 2, 2, 244, 245,
	7, 112, 2, 2, 245, 38, 3, 2, 2, 2, 246, 247, 7, 100, 2, 2, 247, 248, 7,
	116, 2, 2, 248, 249, 7, 103, 2, 2, 249, 250, 7, 99, 2, 2, 250, 251, 7,
	109, 2, 2, 251, 40, 3, 2, 2, 2, 252, 253, 7, 101, 2, 2, 253, 254, 7, 113,
	2, 2, 254, 255, 7, 112, 2, 2, 255, 256, 7, 118, 2, 2, 256, 257, 7, 107,
	2, 2, 257, 258, 7, 112, 2, 2, 258, 259, 7, 119, 2, 2, 259, 260, 7, 103,
	2, 2, 260, 42, 3, 2, 2, 2, 261, 262, 7, 116, 2, 2, 262, 263, 7, 103, 2,
	2, 263, 264, 7, 118, 2, 2, 264, 265, 7, 119, 2, 2, 265, 266, 7, 116, 2,
	2, 266, 267, 7, 112, 2, 2, 267, 44, 3, 2, 2, 2, 268, 269, 7, 114, 2, 2,
	269, 270, 7, 113, 2, 2, 270, 271, 7, 121, 2, 2, 271, 46, 3, 2, 2, 2, 272,
	273, 7, 114, 2, 2, 273, 274, 7, 113, 2, 2, 274, 275, 7, 121, 2, 2, 275,
	276, 7, 104, 2, 2, 276, 48, 3, 2, 2, 2, 277, 278, 7, 118, 2, 2, 278, 279,
	7, 113, 2, 2, 279, 280, 7, 97, 2, 2, 280, 281, 7, 117, 2, 2, 281, 282,
	7, 118, 2, 2, 282, 283, 7, 116, 2, 2, 283, 284, 7, 107, 2, 2, 284, 285,
	7, 112, 2, 2, 285, 286, 7, 105, 2, 2, 286, 50, 3, 2, 2, 2, 287, 288, 7,
	118, 2, 2, 288, 289, 7, 113, 2, 2, 289, 290, 7, 97, 2, 2, 290, 291, 7,
	113, 2, 2, 291, 292, 7, 121, 2, 2, 292, 293, 7, 112, 2, 2, 293, 294, 7,
	103, 2, 2, 294, 295, 7, 102, 2, 2, 295, 52, 3, 2, 2, 2, 296, 297, 7, 111,
	2, 2, 297, 298, 7, 99, 2, 2, 298, 299, 7, 107, 2, 2, 299, 300, 7, 112,
	2, 2, 300, 54, 3, 2, 2, 2, 301, 302, 7, 104, 2, 2, 302, 303, 7, 112, 2,
	2, 303, 56, 3, 2, 2, 2, 304, 305, 7, 120, 2, 2, 305, 306, 7, 103, 2, 2,
	306, 307, 7, 101, 2, 2, 307, 308, 7, 118, 2, 2, 308, 309, 7, 113, 2, 2,
	309, 310, 7, 116, 2, 2, 310, 58, 3, 2, 2, 2, 311, 312, 7, 120, 2, 2, 312,
	313, 7, 103, 2, 2, 313, 314, 7, 101, 2, 2, 314, 60, 3, 2, 2, 2, 315, 316,
	7, 88, 2, 2, 316, 317, 7, 103, 2, 2, 317, 318, 7, 101, 2, 2, 318, 62, 3,
	2, 2, 2, 319, 320, 7, 112, 2, 2, 320, 321, 7, 103, 2, 2, 321, 322, 7, 121,
	2, 2, 322, 64, 3, 2, 2, 2, 323, 324, 7, 88, 2, 2, 324, 325, 7, 103, 2,
	2, 325, 326, 7, 101, 2, 2, 326, 327, 7, 60, 2, 2, 327, 328, 7, 60, 2, 2,
	328, 329, 7, 112, 2, 2, 329, 330, 7, 103, 2, 2, 330, 331, 7, 121, 2, 2,
	331, 332, 7, 42, 2, 2, 332, 333, 7, 43, 2, 2, 333, 66, 3, 2, 2, 2, 334,
	335, 7, 88, 2, 2, 335, 336, 7, 103, 2, 2, 336, 337, 7, 101, 2, 2, 337,
	338, 7, 60, 2, 2, 338, 339, 7, 60, 2, 2, 339, 340, 7, 121, 2, 2, 340, 341,
	7, 107, 2, 2, 341, 342, 7, 118, 2, 2, 342, 343, 7, 106, 2, 2, 343, 344,
	7, 97, 2, 2, 344, 345, 7, 101, 2, 2, 345, 346, 7, 99, 2, 2, 346, 347, 7,
	114, 2, 2, 347, 348, 7, 99, 2, 2, 348, 349, 7, 101, 2, 2, 349, 350, 7,
	107, 2, 2, 350, 351, 7, 118, 2, 2, 351, 352, 7, 123, 2, 2, 352, 68, 3,
	2, 2, 2, 353, 354, 7, 117, 2, 2, 354, 355, 7, 118, 2, 2, 355, 356, 7, 116,
	2, 2, 356, 357, 7, 119, 2, 2, 357, 358, 7, 101, 2, 2, 358, 359, 7, 118,
	2, 2, 359, 70, 3, 2, 2, 2, 360, 361, 7, 111, 2, 2, 361, 362, 7, 113, 2,
	2, 362, 363, 7, 102, 2, 2, 363, 72, 3, 2, 2, 2, 364, 365, 7, 114, 2, 2,
	365, 366, 7, 119, 2, 2, 366, 367, 7, 100, 2, 2, 367, 74, 3, 2, 2, 2, 368,
	369, 7, 49, 2, 2, 369, 370, 7, 44, 2, 2, 370, 372, 3, 2, 2, 2, 371, 373,
	10, 2, 2, 2, 372, 371, 3, 2, 2, 2, 373, 374, 3, 2, 2, 2, 374, 372, 3, 2,
	2, 2, 374, 375, 3, 2, 2, 2, 375, 376, 3, 2, 2, 2, 376, 377, 7, 44, 2, 2,
	377, 378, 7, 49, 2, 2, 378, 379, 3, 2, 2, 2, 379, 380, 8, 38, 2, 2, 380,
	76, 3, 2, 2, 2, 381, 382, 7, 49, 2, 2, 382, 383, 7, 49, 2, 2, 383, 385,
	3, 2, 2, 2, 384, 386, 10, 3, 2, 2, 385, 384, 3, 2, 2, 2, 386, 387, 3, 2,
	2, 2, 387, 385, 3, 2, 2, 2, 387, 388, 3, 2, 2, 2, 388, 389, 3, 2, 2, 2,
	389, 390, 8, 39, 2, 2, 390, 78, 3, 2, 2, 2, 391, 393, 9, 4, 2, 2, 392,
	391, 3, 2, 2, 2, 393, 394, 3, 2, 2, 2, 394, 392, 3, 2, 2, 2, 394, 395,
	3, 2, 2, 2, 395, 80, 3, 2, 2, 2, 396, 398, 9, 4, 2, 2, 397, 396, 3, 2,
	2, 2, 398, 399, 3, 2, 2, 2, 399, 397, 3, 2, 2, 2, 399, 400, 3, 2, 2, 2,
	400, 401, 3, 2, 2, 2, 401, 403, 7, 48, 2, 2, 402, 404, 9, 4, 2, 2, 403,
	402, 3, 2, 2, 2, 404, 405, 3, 2, 2, 2, 405, 403, 3, 2, 2, 2, 405, 406,
	3, 2, 2, 2, 406, 82, 3, 2, 2, 2, 407, 408, 7, 41, 2, 2, 408, 409, 10, 5,
	2, 2, 409, 410, 7, 41, 2, 2, 410, 84, 3, 2, 2, 2, 411, 415, 7, 36, 2, 2,
	412, 414, 10, 5, 2, 2, 413, 412, 3, 2, 2, 2, 414, 417, 3, 2, 2, 2, 415,
	413, 3, 2, 2, 2, 415, 416, 3, 2, 2, 2, 416, 418, 3, 2, 2, 2, 417, 415,
	3, 2, 2, 2, 418, 419, 7, 36, 2, 2, 419, 86, 3, 2, 2, 2, 420, 421, 7, 118,
	2, 2, 421, 422, 7, 116, 2, 2, 422, 423, 7, 119, 2, 2, 423, 430, 7, 103,
	2, 2, 424, 425, 7, 104, 2, 2, 425, 426, 7, 99, 2, 2, 426, 427, 7, 110,
	2, 2, 427, 428, 7, 117, 2, 2, 428, 430, 7, 103, 2, 2, 429, 420, 3, 2, 2,
	2, 429, 424, 3, 2, 2, 2, 430, 88, 3, 2, 2, 2, 431, 435, 9, 6, 2, 2, 432,
	434, 9, 7, 2, 2, 433, 432, 3, 2, 2, 2, 434, 437, 3, 2, 2, 2, 435, 433,
	3, 2, 2, 2, 435, 436, 3, 2, 2, 2, 436, 90, 3, 2, 2, 2, 437, 435, 3, 2,
	2, 2, 438, 439, 7, 63, 2, 2, 439, 92, 3, 2, 2, 2, 440, 441, 7, 48, 2, 2,
	441, 94, 3, 2, 2, 2, 442, 443, 7, 61, 2, 2, 443, 96, 3, 2, 2, 2, 444, 445,
	7, 46, 2, 2, 445, 98, 3, 2, 2, 2, 446, 447, 7, 60, 2, 2, 447, 100, 3, 2,
	2, 2, 448, 449, 7, 35, 2, 2, 449, 102, 3, 2, 2, 2, 450, 451, 7, 40, 2,
	2, 451, 104, 3, 2, 2, 2, 452, 453, 7, 60, 2, 2, 453, 454, 7, 60, 2, 2,
	454, 106, 3, 2, 2, 2, 455, 456, 7, 47, 2, 2, 456, 457, 7, 64, 2, 2, 457,
	108, 3, 2, 2, 2, 458, 459, 7, 48, 2, 2, 459, 460, 7, 48, 2, 2, 460, 110,
	3, 2, 2, 2, 461, 462, 7, 42, 2, 2, 462, 112, 3, 2, 2, 2, 463, 464, 7, 43,
	2, 2, 464, 114, 3, 2, 2, 2, 465, 466, 7, 125, 2, 2, 466, 116, 3, 2, 2,
	2, 467, 468, 7, 127, 2, 2, 468, 118, 3, 2, 2, 2, 469, 470, 7, 93, 2, 2,
	470, 120, 3, 2, 2, 2, 471, 472, 7, 95, 2, 2, 472, 122, 3, 2, 2, 2, 473,
	474, 7, 63, 2, 2, 474, 475, 7, 63, 2, 2, 475, 124, 3, 2, 2, 2, 476, 477,
	7, 35, 2, 2, 477, 478, 7, 63, 2, 2, 478, 126, 3, 2, 2, 2, 479, 480, 7,
	64, 2, 2, 480, 128, 3, 2, 2, 2, 481, 482, 7, 62, 2, 2, 482, 130, 3, 2,
	2, 2, 483, 484, 7, 64, 2, 2, 484, 485, 7, 63, 2, 2, 485, 132, 3, 2, 2,
	2, 486, 487, 7, 62, 2, 2, 487, 488, 7, 63, 2, 2, 488, 134, 3, 2, 2, 2,
	489, 490, 7, 44, 2, 2, 490, 136, 3, 2, 2, 2, 491, 492, 7, 49, 2, 2, 492,
	138, 3, 2, 2, 2, 493, 494, 7, 39, 2, 2, 494, 140, 3, 2, 2, 2, 495, 496,
	7, 45, 2, 2, 496, 142, 3, 2, 2, 2, 497, 498, 7, 47, 2, 2, 498, 144, 3,
	2, 2, 2, 499, 500, 7, 40, 2, 2, 500, 501, 7, 40, 2, 2, 501, 146, 3, 2,
	2, 2, 502, 503, 7, 126, 2, 2, 503, 504, 7, 126, 2, 2, 504, 148, 3, 2, 2,
	2, 505, 506, 7, 126, 2, 2, 506, 150, 3, 2, 2, 2, 507, 508, 7, 63, 2, 2,
	508, 509, 7, 64, 2, 2, 509, 152, 3, 2, 2, 2, 510, 511, 7, 97, 2, 2, 511,
	154, 3, 2, 2, 2, 512, 514, 9, 8, 2, 2, 513, 512, 3, 2, 2, 2, 514, 515,
	3, 2, 2, 2, 515, 513, 3, 2, 2, 2, 515, 516, 3, 2, 2, 2, 516, 517, 3, 2,
	2, 2, 517, 518, 8, 78, 2, 2, 518, 156, 3, 2, 2, 2, 519, 520, 7, 94, 2,
	2, 520, 521, 9, 9, 2, 2, 521, 158, 3, 2, 2, 2, 12, 2, 374, 387, 394, 399,
	405, 415, 429, 435, 515, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println'", "'print'", "'let'", "'mut'", "'String'", "'i64'", "'f64'",
	"'bool'", "'char'", "'&str'", "'as'", "'if'", "'else'", "'match'", "'while'",
	"'loop'", "'for'", "'in'", "'break'", "'continue'", "'return'", "'pow'",
	"'powf'", "'to_string'", "'to_owned'", "'main'", "'fn'", "'vector'", "'vec'",
	"'Vec'", "'new'", "'Vec::new()'", "'Vec::with_capacity'", "'struct'", "'mod'",
	"'pub'", "", "", "", "", "", "", "", "", "'='", "'.'", "';'", "','", "':'",
	"'!'", "'&'", "'::'", "'->'", "'..'", "'('", "')'", "'{'", "'}'", "'['",
	"']'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'*'", "'/'", "'%'",
	"'+'", "'-'", "'&&'", "'||'", "'|'", "'=>'", "'_'",
}

var lexerSymbolicNames = []string{
	"", "PRINTLN", "PRINT", "DECLARAR", "MUT", "RSTRING", "RINTEGER", "RREAL",
	"RBOOLEAN", "RCHAR", "RSTR", "RAS", "RIF", "RELSE", "RMATCH", "RWHILE",
	"RLOOP", "RFOR", "RIN", "RBREAK", "RCONTINUE", "RRETURN", "POWI", "POWF",
	"TOSTRING", "TOOWNED", "RMAIN", "RFN", "RVECTOR", "RVEC", "RVECMayus",
	"RNEW", "REVECTORNEW", "REVECCAPACITY", "RSTRUCT", "RMODULE", "RPUB", "MULTILINE",
	"INLINE", "INTEGER", "FLOAT", "CHAR", "STRING", "BOOLEAN", "ID", "EQUAL",
	"DOT", "SEMICOLON", "COMMA", "COLON", "ADMIRATION", "REFERENCE", "HERITAGE",
	"ARROW", "RANGE", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY", "RIGHT_KEY", "LEFT_BRACKET",
	"RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL", "GREATER_THAN", "LESS_THAN",
	"GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL", "DIV", "MOD", "ADD", "SUB",
	"AND", "OR", "PIPE", "EQUAL_ARROW", "UNDERSCORE", "WHITESPACE",
}

var lexerRuleNames = []string{
	"PRINTLN", "PRINT", "DECLARAR", "MUT", "RSTRING", "RINTEGER", "RREAL",
	"RBOOLEAN", "RCHAR", "RSTR", "RAS", "RIF", "RELSE", "RMATCH", "RWHILE",
	"RLOOP", "RFOR", "RIN", "RBREAK", "RCONTINUE", "RRETURN", "POWI", "POWF",
	"TOSTRING", "TOOWNED", "RMAIN", "RFN", "RVECTOR", "RVEC", "RVECMayus",
	"RNEW", "REVECTORNEW", "REVECCAPACITY", "RSTRUCT", "RMODULE", "RPUB", "MULTILINE",
	"INLINE", "INTEGER", "FLOAT", "CHAR", "STRING", "BOOLEAN", "ID", "EQUAL",
	"DOT", "SEMICOLON", "COMMA", "COLON", "ADMIRATION", "REFERENCE", "HERITAGE",
	"ARROW", "RANGE", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY", "RIGHT_KEY", "LEFT_BRACKET",
	"RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL", "GREATER_THAN", "LESS_THAN",
	"GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL", "DIV", "MOD", "ADD", "SUB",
	"AND", "OR", "PIPE", "EQUAL_ARROW", "UNDERSCORE", "WHITESPACE", "ESC_SEQ",
}

type ProjectLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewProjectLexer(input antlr.CharStream) *ProjectLexer {

	l := new(ProjectLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ProjectLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProjectLexer tokens.
const (
	ProjectLexerPRINTLN           = 1
	ProjectLexerPRINT             = 2
	ProjectLexerDECLARAR          = 3
	ProjectLexerMUT               = 4
	ProjectLexerRSTRING           = 5
	ProjectLexerRINTEGER          = 6
	ProjectLexerRREAL             = 7
	ProjectLexerRBOOLEAN          = 8
	ProjectLexerRCHAR             = 9
	ProjectLexerRSTR              = 10
	ProjectLexerRAS               = 11
	ProjectLexerRIF               = 12
	ProjectLexerRELSE             = 13
	ProjectLexerRMATCH            = 14
	ProjectLexerRWHILE            = 15
	ProjectLexerRLOOP             = 16
	ProjectLexerRFOR              = 17
	ProjectLexerRIN               = 18
	ProjectLexerRBREAK            = 19
	ProjectLexerRCONTINUE         = 20
	ProjectLexerRRETURN           = 21
	ProjectLexerPOWI              = 22
	ProjectLexerPOWF              = 23
	ProjectLexerTOSTRING          = 24
	ProjectLexerTOOWNED           = 25
	ProjectLexerRMAIN             = 26
	ProjectLexerRFN               = 27
	ProjectLexerRVECTOR           = 28
	ProjectLexerRVEC              = 29
	ProjectLexerRVECMayus         = 30
	ProjectLexerRNEW              = 31
	ProjectLexerREVECTORNEW       = 32
	ProjectLexerREVECCAPACITY     = 33
	ProjectLexerRSTRUCT           = 34
	ProjectLexerRMODULE           = 35
	ProjectLexerRPUB              = 36
	ProjectLexerMULTILINE         = 37
	ProjectLexerINLINE            = 38
	ProjectLexerINTEGER           = 39
	ProjectLexerFLOAT             = 40
	ProjectLexerCHAR              = 41
	ProjectLexerSTRING            = 42
	ProjectLexerBOOLEAN           = 43
	ProjectLexerID                = 44
	ProjectLexerEQUAL             = 45
	ProjectLexerDOT               = 46
	ProjectLexerSEMICOLON         = 47
	ProjectLexerCOMMA             = 48
	ProjectLexerCOLON             = 49
	ProjectLexerADMIRATION        = 50
	ProjectLexerREFERENCE         = 51
	ProjectLexerHERITAGE          = 52
	ProjectLexerARROW             = 53
	ProjectLexerRANGE             = 54
	ProjectLexerLEFT_PAR          = 55
	ProjectLexerRIGHT_PAR         = 56
	ProjectLexerLEFT_KEY          = 57
	ProjectLexerRIGHT_KEY         = 58
	ProjectLexerLEFT_BRACKET      = 59
	ProjectLexerRIGHT_BRACKET     = 60
	ProjectLexerEQUEAL_EQUAL      = 61
	ProjectLexerNOTEQUAL          = 62
	ProjectLexerGREATER_THAN      = 63
	ProjectLexerLESS_THAN         = 64
	ProjectLexerGREATER_EQUALTHAN = 65
	ProjectLexerLESS_EQUEALTHAN   = 66
	ProjectLexerMUL               = 67
	ProjectLexerDIV               = 68
	ProjectLexerMOD               = 69
	ProjectLexerADD               = 70
	ProjectLexerSUB               = 71
	ProjectLexerAND               = 72
	ProjectLexerOR                = 73
	ProjectLexerPIPE              = 74
	ProjectLexerEQUAL_ARROW       = 75
	ProjectLexerUNDERSCORE        = 76
	ProjectLexerWHITESPACE        = 77
)
