// Code generated from ProjectLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 45, 286,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 13,
	3, 13, 3, 13, 3, 13, 6, 13, 161, 10, 13, 13, 13, 14, 13, 162, 3, 13, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 6, 14, 174, 10, 14,
	13, 14, 14, 14, 175, 3, 14, 3, 14, 3, 15, 6, 15, 181, 10, 15, 13, 15, 14,
	15, 182, 3, 16, 6, 16, 186, 10, 16, 13, 16, 14, 16, 187, 3, 16, 3, 16,
	6, 16, 192, 10, 16, 13, 16, 14, 16, 193, 3, 17, 3, 17, 3, 17, 3, 17, 3,
	18, 3, 18, 7, 18, 202, 10, 18, 12, 18, 14, 18, 205, 11, 18, 3, 18, 3, 18,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 218,
	10, 19, 3, 20, 3, 20, 7, 20, 222, 10, 20, 12, 20, 14, 20, 225, 11, 20,
	3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3,
	26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31,
	3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 35, 3,
	35, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39,
	3, 40, 3, 40, 3, 41, 3, 41, 3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 6, 44, 278,
	10, 44, 13, 44, 14, 44, 279, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 2, 2, 46,
	3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23,
	13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41,
	22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59,
	31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77,
	40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 2, 3, 2, 10, 3, 2, 49,
	49, 3, 2, 12, 12, 3, 2, 50, 59, 3, 2, 36, 36, 7, 2, 67, 92, 97, 97, 99,
	124, 211, 211, 243, 243, 7, 2, 50, 59, 67, 92, 99, 124, 211, 211, 243,
	243, 5, 2, 11, 12, 15, 15, 34, 34, 9, 2, 34, 35, 37, 37, 45, 45, 47, 48,
	60, 60, 66, 66, 93, 95, 2, 293, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2,
	7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2,
	2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2,
	2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2,
	2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45,
	3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2,
	53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2,
	2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2,
	2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2,
	2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3,
	2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 3, 91, 3, 2, 2, 2, 5, 99,
	3, 2, 2, 2, 7, 105, 3, 2, 2, 2, 9, 109, 3, 2, 2, 2, 11, 116, 3, 2, 2, 2,
	13, 124, 3, 2, 2, 2, 15, 129, 3, 2, 2, 2, 17, 137, 3, 2, 2, 2, 19, 140,
	3, 2, 2, 2, 21, 149, 3, 2, 2, 2, 23, 153, 3, 2, 2, 2, 25, 156, 3, 2, 2,
	2, 27, 169, 3, 2, 2, 2, 29, 180, 3, 2, 2, 2, 31, 185, 3, 2, 2, 2, 33, 195,
	3, 2, 2, 2, 35, 199, 3, 2, 2, 2, 37, 217, 3, 2, 2, 2, 39, 219, 3, 2, 2,
	2, 41, 226, 3, 2, 2, 2, 43, 228, 3, 2, 2, 2, 45, 230, 3, 2, 2, 2, 47, 232,
	3, 2, 2, 2, 49, 234, 3, 2, 2, 2, 51, 236, 3, 2, 2, 2, 53, 238, 3, 2, 2,
	2, 55, 240, 3, 2, 2, 2, 57, 242, 3, 2, 2, 2, 59, 244, 3, 2, 2, 2, 61, 246,
	3, 2, 2, 2, 63, 248, 3, 2, 2, 2, 65, 250, 3, 2, 2, 2, 67, 253, 3, 2, 2,
	2, 69, 256, 3, 2, 2, 2, 71, 258, 3, 2, 2, 2, 73, 260, 3, 2, 2, 2, 75, 263,
	3, 2, 2, 2, 77, 266, 3, 2, 2, 2, 79, 268, 3, 2, 2, 2, 81, 270, 3, 2, 2,
	2, 83, 272, 3, 2, 2, 2, 85, 274, 3, 2, 2, 2, 87, 277, 3, 2, 2, 2, 89, 283,
	3, 2, 2, 2, 91, 92, 7, 114, 2, 2, 92, 93, 7, 116, 2, 2, 93, 94, 7, 107,
	2, 2, 94, 95, 7, 112, 2, 2, 95, 96, 7, 118, 2, 2, 96, 97, 7, 110, 2, 2,
	97, 98, 7, 112, 2, 2, 98, 4, 3, 2, 2, 2, 99, 100, 7, 114, 2, 2, 100, 101,
	7, 116, 2, 2, 101, 102, 7, 107, 2, 2, 102, 103, 7, 112, 2, 2, 103, 104,
	7, 118, 2, 2, 104, 6, 3, 2, 2, 2, 105, 106, 7, 110, 2, 2, 106, 107, 7,
	103, 2, 2, 107, 108, 7, 118, 2, 2, 108, 8, 3, 2, 2, 2, 109, 110, 7, 85,
	2, 2, 110, 111, 7, 118, 2, 2, 111, 112, 7, 116, 2, 2, 112, 113, 7, 107,
	2, 2, 113, 114, 7, 112, 2, 2, 114, 115, 7, 105, 2, 2, 115, 10, 3, 2, 2,
	2, 116, 117, 7, 75, 2, 2, 117, 118, 7, 112, 2, 2, 118, 119, 7, 118, 2,
	2, 119, 120, 7, 103, 2, 2, 120, 121, 7, 105, 2, 2, 121, 122, 7, 103, 2,
	2, 122, 123, 7, 116, 2, 2, 123, 12, 3, 2, 2, 2, 124, 125, 7, 84, 2, 2,
	125, 126, 7, 103, 2, 2, 126, 127, 7, 99, 2, 2, 127, 128, 7, 110, 2, 2,
	128, 14, 3, 2, 2, 2, 129, 130, 7, 68, 2, 2, 130, 131, 7, 113, 2, 2, 131,
	132, 7, 113, 2, 2, 132, 133, 7, 110, 2, 2, 133, 134, 7, 103, 2, 2, 134,
	135, 7, 99, 2, 2, 135, 136, 7, 112, 2, 2, 136, 16, 3, 2, 2, 2, 137, 138,
	7, 75, 2, 2, 138, 139, 7, 104, 2, 2, 139, 18, 3, 2, 2, 2, 140, 141, 7,
	103, 2, 2, 141, 142, 7, 112, 2, 2, 142, 143, 7, 118, 2, 2, 143, 144, 7,
	113, 2, 2, 144, 145, 7, 112, 2, 2, 145, 146, 7, 101, 2, 2, 146, 147, 7,
	103, 2, 2, 147, 148, 7, 117, 2, 2, 148, 20, 3, 2, 2, 2, 149, 150, 7, 67,
	2, 2, 150, 151, 7, 80, 2, 2, 151, 152, 7, 70, 2, 2, 152, 22, 3, 2, 2, 2,
	153, 154, 7, 81, 2, 2, 154, 155, 7, 84, 2, 2, 155, 24, 3, 2, 2, 2, 156,
	157, 7, 49, 2, 2, 157, 158, 7, 44, 2, 2, 158, 160, 3, 2, 2, 2, 159, 161,
	10, 2, 2, 2, 160, 159, 3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 160, 3, 2,
	2, 2, 162, 163, 3, 2, 2, 2, 163, 164, 3, 2, 2, 2, 164, 165, 7, 44, 2, 2,
	165, 166, 7, 49, 2, 2, 166, 167, 3, 2, 2, 2, 167, 168, 8, 13, 2, 2, 168,
	26, 3, 2, 2, 2, 169, 170, 7, 49, 2, 2, 170, 171, 7, 49, 2, 2, 171, 173,
	3, 2, 2, 2, 172, 174, 10, 3, 2, 2, 173, 172, 3, 2, 2, 2, 174, 175, 3, 2,
	2, 2, 175, 173, 3, 2, 2, 2, 175, 176, 3, 2, 2, 2, 176, 177, 3, 2, 2, 2,
	177, 178, 8, 14, 2, 2, 178, 28, 3, 2, 2, 2, 179, 181, 9, 4, 2, 2, 180,
	179, 3, 2, 2, 2, 181, 182, 3, 2, 2, 2, 182, 180, 3, 2, 2, 2, 182, 183,
	3, 2, 2, 2, 183, 30, 3, 2, 2, 2, 184, 186, 9, 4, 2, 2, 185, 184, 3, 2,
	2, 2, 186, 187, 3, 2, 2, 2, 187, 185, 3, 2, 2, 2, 187, 188, 3, 2, 2, 2,
	188, 189, 3, 2, 2, 2, 189, 191, 7, 48, 2, 2, 190, 192, 9, 4, 2, 2, 191,
	190, 3, 2, 2, 2, 192, 193, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 193, 194,
	3, 2, 2, 2, 194, 32, 3, 2, 2, 2, 195, 196, 7, 41, 2, 2, 196, 197, 10, 5,
	2, 2, 197, 198, 7, 41, 2, 2, 198, 34, 3, 2, 2, 2, 199, 203, 7, 36, 2, 2,
	200, 202, 10, 5, 2, 2, 201, 200, 3, 2, 2, 2, 202, 205, 3, 2, 2, 2, 203,
	201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204, 206, 3, 2, 2, 2, 205, 203,
	3, 2, 2, 2, 206, 207, 7, 36, 2, 2, 207, 36, 3, 2, 2, 2, 208, 209, 7, 118,
	2, 2, 209, 210, 7, 116, 2, 2, 210, 211, 7, 119, 2, 2, 211, 218, 7, 103,
	2, 2, 212, 213, 7, 104, 2, 2, 213, 214, 7, 99, 2, 2, 214, 215, 7, 110,
	2, 2, 215, 216, 7, 117, 2, 2, 216, 218, 7, 103, 2, 2, 217, 208, 3, 2, 2,
	2, 217, 212, 3, 2, 2, 2, 218, 38, 3, 2, 2, 2, 219, 223, 9, 6, 2, 2, 220,
	222, 9, 7, 2, 2, 221, 220, 3, 2, 2, 2, 222, 225, 3, 2, 2, 2, 223, 221,
	3, 2, 2, 2, 223, 224, 3, 2, 2, 2, 224, 40, 3, 2, 2, 2, 225, 223, 3, 2,
	2, 2, 226, 227, 7, 63, 2, 2, 227, 42, 3, 2, 2, 2, 228, 229, 7, 48, 2, 2,
	229, 44, 3, 2, 2, 2, 230, 231, 7, 61, 2, 2, 231, 46, 3, 2, 2, 2, 232, 233,
	7, 46, 2, 2, 233, 48, 3, 2, 2, 2, 234, 235, 7, 60, 2, 2, 235, 50, 3, 2,
	2, 2, 236, 237, 7, 35, 2, 2, 237, 52, 3, 2, 2, 2, 238, 239, 7, 42, 2, 2,
	239, 54, 3, 2, 2, 2, 240, 241, 7, 43, 2, 2, 241, 56, 3, 2, 2, 2, 242, 243,
	7, 125, 2, 2, 243, 58, 3, 2, 2, 2, 244, 245, 7, 127, 2, 2, 245, 60, 3,
	2, 2, 2, 246, 247, 7, 93, 2, 2, 247, 62, 3, 2, 2, 2, 248, 249, 7, 95, 2,
	2, 249, 64, 3, 2, 2, 2, 250, 251, 7, 63, 2, 2, 251, 252, 7, 63, 2, 2, 252,
	66, 3, 2, 2, 2, 253, 254, 7, 35, 2, 2, 254, 255, 7, 63, 2, 2, 255, 68,
	3, 2, 2, 2, 256, 257, 7, 64, 2, 2, 257, 70, 3, 2, 2, 2, 258, 259, 7, 62,
	2, 2, 259, 72, 3, 2, 2, 2, 260, 261, 7, 64, 2, 2, 261, 262, 7, 63, 2, 2,
	262, 74, 3, 2, 2, 2, 263, 264, 7, 62, 2, 2, 264, 265, 7, 63, 2, 2, 265,
	76, 3, 2, 2, 2, 266, 267, 7, 44, 2, 2, 267, 78, 3, 2, 2, 2, 268, 269, 7,
	49, 2, 2, 269, 80, 3, 2, 2, 2, 270, 271, 7, 45, 2, 2, 271, 82, 3, 2, 2,
	2, 272, 273, 7, 47, 2, 2, 273, 84, 3, 2, 2, 2, 274, 275, 7, 39, 2, 2, 275,
	86, 3, 2, 2, 2, 276, 278, 9, 8, 2, 2, 277, 276, 3, 2, 2, 2, 278, 279, 3,
	2, 2, 2, 279, 277, 3, 2, 2, 2, 279, 280, 3, 2, 2, 2, 280, 281, 3, 2, 2,
	2, 281, 282, 8, 44, 2, 2, 282, 88, 3, 2, 2, 2, 283, 284, 7, 94, 2, 2, 284,
	285, 9, 9, 2, 2, 285, 90, 3, 2, 2, 2, 12, 2, 162, 175, 182, 187, 193, 203,
	217, 223, 279, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println'", "'print'", "'let'", "'String'", "'Integer'", "'Real'",
	"'Boolean'", "'If'", "'entonces'", "'AND'", "'OR'", "", "", "", "", "",
	"", "", "", "'='", "'.'", "';'", "','", "':'", "'!'", "'('", "')'", "'{'",
	"'}'", "'['", "']'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'*'",
	"'/'", "'+'", "'-'", "'%'",
}

var lexerSymbolicNames = []string{
	"", "PRINTLN", "PRINT", "DECLARAR", "RSTRING", "RINTEGER", "RREAL", "RBOOLEAN",
	"RIF", "RELSE", "RAND", "ROR", "MULTILINE", "INLINE", "INTEGER", "FLOAT",
	"CHAR", "STRING", "BOOLEAN", "ID", "EQUAL", "DOT", "SEMICOLON", "COMMA",
	"COLON", "ADMIRATION", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY", "RIGHT_KEY",
	"LEFT_BRACKET", "RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL", "GREATER_THAN",
	"LESS_THAN", "GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL", "DIV", "ADD",
	"SUB", "MOD", "WHITESPACE",
}

var lexerRuleNames = []string{
	"PRINTLN", "PRINT", "DECLARAR", "RSTRING", "RINTEGER", "RREAL", "RBOOLEAN",
	"RIF", "RELSE", "RAND", "ROR", "MULTILINE", "INLINE", "INTEGER", "FLOAT",
	"CHAR", "STRING", "BOOLEAN", "ID", "EQUAL", "DOT", "SEMICOLON", "COMMA",
	"COLON", "ADMIRATION", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY", "RIGHT_KEY",
	"LEFT_BRACKET", "RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL", "GREATER_THAN",
	"LESS_THAN", "GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL", "DIV", "ADD",
	"SUB", "MOD", "WHITESPACE", "ESC_SEQ",
}

type ProjectLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewProjectLexer(input antlr.CharStream) *ProjectLexer {

	l := new(ProjectLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ProjectLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProjectLexer tokens.
const (
	ProjectLexerPRINTLN           = 1
	ProjectLexerPRINT             = 2
	ProjectLexerDECLARAR          = 3
	ProjectLexerRSTRING           = 4
	ProjectLexerRINTEGER          = 5
	ProjectLexerRREAL             = 6
	ProjectLexerRBOOLEAN          = 7
	ProjectLexerRIF               = 8
	ProjectLexerRELSE             = 9
	ProjectLexerRAND              = 10
	ProjectLexerROR               = 11
	ProjectLexerMULTILINE         = 12
	ProjectLexerINLINE            = 13
	ProjectLexerINTEGER           = 14
	ProjectLexerFLOAT             = 15
	ProjectLexerCHAR              = 16
	ProjectLexerSTRING            = 17
	ProjectLexerBOOLEAN           = 18
	ProjectLexerID                = 19
	ProjectLexerEQUAL             = 20
	ProjectLexerDOT               = 21
	ProjectLexerSEMICOLON         = 22
	ProjectLexerCOMMA             = 23
	ProjectLexerCOLON             = 24
	ProjectLexerADMIRATION        = 25
	ProjectLexerLEFT_PAR          = 26
	ProjectLexerRIGHT_PAR         = 27
	ProjectLexerLEFT_KEY          = 28
	ProjectLexerRIGHT_KEY         = 29
	ProjectLexerLEFT_BRACKET      = 30
	ProjectLexerRIGHT_BRACKET     = 31
	ProjectLexerEQUEAL_EQUAL      = 32
	ProjectLexerNOTEQUAL          = 33
	ProjectLexerGREATER_THAN      = 34
	ProjectLexerLESS_THAN         = 35
	ProjectLexerGREATER_EQUALTHAN = 36
	ProjectLexerLESS_EQUEALTHAN   = 37
	ProjectLexerMUL               = 38
	ProjectLexerDIV               = 39
	ProjectLexerADD               = 40
	ProjectLexerSUB               = 41
	ProjectLexerMOD               = 42
	ProjectLexerWHITESPACE        = 43
)
