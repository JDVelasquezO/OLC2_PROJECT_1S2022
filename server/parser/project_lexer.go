// Code generated from ProjectLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 47, 296,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 3, 2, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14,
	6, 14, 169, 10, 14, 13, 14, 14, 14, 170, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 15, 3, 15, 6, 15, 182, 10, 15, 13, 15, 14, 15, 183,
	3, 15, 3, 15, 3, 16, 6, 16, 189, 10, 16, 13, 16, 14, 16, 190, 3, 17, 6,
	17, 194, 10, 17, 13, 17, 14, 17, 195, 3, 17, 3, 17, 6, 17, 200, 10, 17,
	13, 17, 14, 17, 201, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 7, 19, 210,
	10, 19, 12, 19, 14, 19, 213, 11, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 5, 20, 226, 10, 20, 3, 21, 3,
	21, 7, 21, 230, 10, 21, 12, 21, 14, 21, 233, 11, 21, 3, 22, 3, 22, 3, 23,
	3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3,
	28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33,
	3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3,
	38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42,
	3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 46, 6, 46, 288, 10,
	46, 13, 46, 14, 46, 289, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 2, 2, 48, 3,
	3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31,
	61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40,
	79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 2, 3, 2, 10,
	3, 2, 49, 49, 3, 2, 12, 12, 3, 2, 50, 59, 3, 2, 36, 36, 7, 2, 67, 92, 97,
	97, 99, 124, 211, 211, 243, 243, 7, 2, 50, 59, 67, 92, 99, 124, 211, 211,
	243, 243, 5, 2, 11, 12, 15, 15, 34, 34, 9, 2, 34, 35, 37, 37, 45, 45, 47,
	48, 60, 60, 66, 66, 93, 95, 2, 303, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2,
	2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2,
	2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2,
	2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3,
	2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37,
	3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2,
	45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2,
	2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2,
	2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2,
	2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3,
	2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83,
	3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2,
	91, 3, 2, 2, 2, 3, 95, 3, 2, 2, 2, 5, 103, 3, 2, 2, 2, 7, 109, 3, 2, 2,
	2, 9, 113, 3, 2, 2, 2, 11, 120, 3, 2, 2, 2, 13, 128, 3, 2, 2, 2, 15, 133,
	3, 2, 2, 2, 17, 141, 3, 2, 2, 2, 19, 145, 3, 2, 2, 2, 21, 148, 3, 2, 2,
	2, 23, 157, 3, 2, 2, 2, 25, 161, 3, 2, 2, 2, 27, 164, 3, 2, 2, 2, 29, 177,
	3, 2, 2, 2, 31, 188, 3, 2, 2, 2, 33, 193, 3, 2, 2, 2, 35, 203, 3, 2, 2,
	2, 37, 207, 3, 2, 2, 2, 39, 225, 3, 2, 2, 2, 41, 227, 3, 2, 2, 2, 43, 234,
	3, 2, 2, 2, 45, 236, 3, 2, 2, 2, 47, 238, 3, 2, 2, 2, 49, 240, 3, 2, 2,
	2, 51, 242, 3, 2, 2, 2, 53, 244, 3, 2, 2, 2, 55, 246, 3, 2, 2, 2, 57, 248,
	3, 2, 2, 2, 59, 250, 3, 2, 2, 2, 61, 252, 3, 2, 2, 2, 63, 254, 3, 2, 2,
	2, 65, 256, 3, 2, 2, 2, 67, 258, 3, 2, 2, 2, 69, 260, 3, 2, 2, 2, 71, 263,
	3, 2, 2, 2, 73, 266, 3, 2, 2, 2, 75, 268, 3, 2, 2, 2, 77, 270, 3, 2, 2,
	2, 79, 273, 3, 2, 2, 2, 81, 276, 3, 2, 2, 2, 83, 278, 3, 2, 2, 2, 85, 280,
	3, 2, 2, 2, 87, 282, 3, 2, 2, 2, 89, 284, 3, 2, 2, 2, 91, 287, 3, 2, 2,
	2, 93, 293, 3, 2, 2, 2, 95, 96, 7, 114, 2, 2, 96, 97, 7, 116, 2, 2, 97,
	98, 7, 107, 2, 2, 98, 99, 7, 112, 2, 2, 99, 100, 7, 118, 2, 2, 100, 101,
	7, 110, 2, 2, 101, 102, 7, 112, 2, 2, 102, 4, 3, 2, 2, 2, 103, 104, 7,
	114, 2, 2, 104, 105, 7, 116, 2, 2, 105, 106, 7, 107, 2, 2, 106, 107, 7,
	112, 2, 2, 107, 108, 7, 118, 2, 2, 108, 6, 3, 2, 2, 2, 109, 110, 7, 110,
	2, 2, 110, 111, 7, 103, 2, 2, 111, 112, 7, 118, 2, 2, 112, 8, 3, 2, 2,
	2, 113, 114, 7, 85, 2, 2, 114, 115, 7, 118, 2, 2, 115, 116, 7, 116, 2,
	2, 116, 117, 7, 107, 2, 2, 117, 118, 7, 112, 2, 2, 118, 119, 7, 105, 2,
	2, 119, 10, 3, 2, 2, 2, 120, 121, 7, 75, 2, 2, 121, 122, 7, 112, 2, 2,
	122, 123, 7, 118, 2, 2, 123, 124, 7, 103, 2, 2, 124, 125, 7, 105, 2, 2,
	125, 126, 7, 103, 2, 2, 126, 127, 7, 116, 2, 2, 127, 12, 3, 2, 2, 2, 128,
	129, 7, 84, 2, 2, 129, 130, 7, 103, 2, 2, 130, 131, 7, 99, 2, 2, 131, 132,
	7, 110, 2, 2, 132, 14, 3, 2, 2, 2, 133, 134, 7, 68, 2, 2, 134, 135, 7,
	113, 2, 2, 135, 136, 7, 113, 2, 2, 136, 137, 7, 110, 2, 2, 137, 138, 7,
	103, 2, 2, 138, 139, 7, 99, 2, 2, 139, 140, 7, 112, 2, 2, 140, 16, 3, 2,
	2, 2, 141, 142, 7, 117, 2, 2, 142, 143, 7, 118, 2, 2, 143, 144, 7, 116,
	2, 2, 144, 18, 3, 2, 2, 2, 145, 146, 7, 75, 2, 2, 146, 147, 7, 104, 2,
	2, 147, 20, 3, 2, 2, 2, 148, 149, 7, 103, 2, 2, 149, 150, 7, 112, 2, 2,
	150, 151, 7, 118, 2, 2, 151, 152, 7, 113, 2, 2, 152, 153, 7, 112, 2, 2,
	153, 154, 7, 101, 2, 2, 154, 155, 7, 103, 2, 2, 155, 156, 7, 117, 2, 2,
	156, 22, 3, 2, 2, 2, 157, 158, 7, 67, 2, 2, 158, 159, 7, 80, 2, 2, 159,
	160, 7, 70, 2, 2, 160, 24, 3, 2, 2, 2, 161, 162, 7, 81, 2, 2, 162, 163,
	7, 84, 2, 2, 163, 26, 3, 2, 2, 2, 164, 165, 7, 49, 2, 2, 165, 166, 7, 44,
	2, 2, 166, 168, 3, 2, 2, 2, 167, 169, 10, 2, 2, 2, 168, 167, 3, 2, 2, 2,
	169, 170, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170, 171, 3, 2, 2, 2, 171,
	172, 3, 2, 2, 2, 172, 173, 7, 44, 2, 2, 173, 174, 7, 49, 2, 2, 174, 175,
	3, 2, 2, 2, 175, 176, 8, 14, 2, 2, 176, 28, 3, 2, 2, 2, 177, 178, 7, 49,
	2, 2, 178, 179, 7, 49, 2, 2, 179, 181, 3, 2, 2, 2, 180, 182, 10, 3, 2,
	2, 181, 180, 3, 2, 2, 2, 182, 183, 3, 2, 2, 2, 183, 181, 3, 2, 2, 2, 183,
	184, 3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 186, 8, 15, 2, 2, 186, 30,
	3, 2, 2, 2, 187, 189, 9, 4, 2, 2, 188, 187, 3, 2, 2, 2, 189, 190, 3, 2,
	2, 2, 190, 188, 3, 2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 32, 3, 2, 2, 2,
	192, 194, 9, 4, 2, 2, 193, 192, 3, 2, 2, 2, 194, 195, 3, 2, 2, 2, 195,
	193, 3, 2, 2, 2, 195, 196, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2, 197, 199,
	7, 48, 2, 2, 198, 200, 9, 4, 2, 2, 199, 198, 3, 2, 2, 2, 200, 201, 3, 2,
	2, 2, 201, 199, 3, 2, 2, 2, 201, 202, 3, 2, 2, 2, 202, 34, 3, 2, 2, 2,
	203, 204, 7, 41, 2, 2, 204, 205, 10, 5, 2, 2, 205, 206, 7, 41, 2, 2, 206,
	36, 3, 2, 2, 2, 207, 211, 7, 36, 2, 2, 208, 210, 10, 5, 2, 2, 209, 208,
	3, 2, 2, 2, 210, 213, 3, 2, 2, 2, 211, 209, 3, 2, 2, 2, 211, 212, 3, 2,
	2, 2, 212, 214, 3, 2, 2, 2, 213, 211, 3, 2, 2, 2, 214, 215, 7, 36, 2, 2,
	215, 38, 3, 2, 2, 2, 216, 217, 7, 118, 2, 2, 217, 218, 7, 116, 2, 2, 218,
	219, 7, 119, 2, 2, 219, 226, 7, 103, 2, 2, 220, 221, 7, 104, 2, 2, 221,
	222, 7, 99, 2, 2, 222, 223, 7, 110, 2, 2, 223, 224, 7, 117, 2, 2, 224,
	226, 7, 103, 2, 2, 225, 216, 3, 2, 2, 2, 225, 220, 3, 2, 2, 2, 226, 40,
	3, 2, 2, 2, 227, 231, 9, 6, 2, 2, 228, 230, 9, 7, 2, 2, 229, 228, 3, 2,
	2, 2, 230, 233, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2, 231, 232, 3, 2, 2, 2,
	232, 42, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234, 235, 7, 63, 2, 2, 235,
	44, 3, 2, 2, 2, 236, 237, 7, 48, 2, 2, 237, 46, 3, 2, 2, 2, 238, 239, 7,
	61, 2, 2, 239, 48, 3, 2, 2, 2, 240, 241, 7, 46, 2, 2, 241, 50, 3, 2, 2,
	2, 242, 243, 7, 60, 2, 2, 243, 52, 3, 2, 2, 2, 244, 245, 7, 35, 2, 2, 245,
	54, 3, 2, 2, 2, 246, 247, 7, 40, 2, 2, 247, 56, 3, 2, 2, 2, 248, 249, 7,
	42, 2, 2, 249, 58, 3, 2, 2, 2, 250, 251, 7, 43, 2, 2, 251, 60, 3, 2, 2,
	2, 252, 253, 7, 125, 2, 2, 253, 62, 3, 2, 2, 2, 254, 255, 7, 127, 2, 2,
	255, 64, 3, 2, 2, 2, 256, 257, 7, 93, 2, 2, 257, 66, 3, 2, 2, 2, 258, 259,
	7, 95, 2, 2, 259, 68, 3, 2, 2, 2, 260, 261, 7, 63, 2, 2, 261, 262, 7, 63,
	2, 2, 262, 70, 3, 2, 2, 2, 263, 264, 7, 35, 2, 2, 264, 265, 7, 63, 2, 2,
	265, 72, 3, 2, 2, 2, 266, 267, 7, 64, 2, 2, 267, 74, 3, 2, 2, 2, 268, 269,
	7, 62, 2, 2, 269, 76, 3, 2, 2, 2, 270, 271, 7, 64, 2, 2, 271, 272, 7, 63,
	2, 2, 272, 78, 3, 2, 2, 2, 273, 274, 7, 62, 2, 2, 274, 275, 7, 63, 2, 2,
	275, 80, 3, 2, 2, 2, 276, 277, 7, 44, 2, 2, 277, 82, 3, 2, 2, 2, 278, 279,
	7, 49, 2, 2, 279, 84, 3, 2, 2, 2, 280, 281, 7, 45, 2, 2, 281, 86, 3, 2,
	2, 2, 282, 283, 7, 47, 2, 2, 283, 88, 3, 2, 2, 2, 284, 285, 7, 39, 2, 2,
	285, 90, 3, 2, 2, 2, 286, 288, 9, 8, 2, 2, 287, 286, 3, 2, 2, 2, 288, 289,
	3, 2, 2, 2, 289, 287, 3, 2, 2, 2, 289, 290, 3, 2, 2, 2, 290, 291, 3, 2,
	2, 2, 291, 292, 8, 46, 2, 2, 292, 92, 3, 2, 2, 2, 293, 294, 7, 94, 2, 2,
	294, 295, 9, 9, 2, 2, 295, 94, 3, 2, 2, 2, 12, 2, 170, 183, 190, 195, 201,
	211, 225, 231, 289, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'println'", "'print'", "'let'", "'String'", "'Integer'", "'Real'",
	"'Boolean'", "'str'", "'If'", "'entonces'", "'AND'", "'OR'", "", "", "",
	"", "", "", "", "", "'='", "'.'", "';'", "','", "':'", "'!'", "'&'", "'('",
	"')'", "'{'", "'}'", "'['", "']'", "'=='", "'!='", "'>'", "'<'", "'>='",
	"'<='", "'*'", "'/'", "'+'", "'-'", "'%'",
}

var lexerSymbolicNames = []string{
	"", "PRINTLN", "PRINT", "DECLARAR", "RSTRING", "RINTEGER", "RREAL", "RBOOLEAN",
	"RSTR", "RIF", "RELSE", "RAND", "ROR", "MULTILINE", "INLINE", "INTEGER",
	"FLOAT", "CHAR", "STRING", "BOOLEAN", "ID", "EQUAL", "DOT", "SEMICOLON",
	"COMMA", "COLON", "ADMIRATION", "REFERENCE", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY",
	"RIGHT_KEY", "LEFT_BRACKET", "RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL",
	"GREATER_THAN", "LESS_THAN", "GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL",
	"DIV", "ADD", "SUB", "MOD", "WHITESPACE",
}

var lexerRuleNames = []string{
	"PRINTLN", "PRINT", "DECLARAR", "RSTRING", "RINTEGER", "RREAL", "RBOOLEAN",
	"RSTR", "RIF", "RELSE", "RAND", "ROR", "MULTILINE", "INLINE", "INTEGER",
	"FLOAT", "CHAR", "STRING", "BOOLEAN", "ID", "EQUAL", "DOT", "SEMICOLON",
	"COMMA", "COLON", "ADMIRATION", "REFERENCE", "LEFT_PAR", "RIGHT_PAR", "LEFT_KEY",
	"RIGHT_KEY", "LEFT_BRACKET", "RIGHT_BRACKET", "EQUEAL_EQUAL", "NOTEQUAL",
	"GREATER_THAN", "LESS_THAN", "GREATER_EQUALTHAN", "LESS_EQUEALTHAN", "MUL",
	"DIV", "ADD", "SUB", "MOD", "WHITESPACE", "ESC_SEQ",
}

type ProjectLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewProjectLexer(input antlr.CharStream) *ProjectLexer {

	l := new(ProjectLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ProjectLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProjectLexer tokens.
const (
	ProjectLexerPRINTLN           = 1
	ProjectLexerPRINT             = 2
	ProjectLexerDECLARAR          = 3
	ProjectLexerRSTRING           = 4
	ProjectLexerRINTEGER          = 5
	ProjectLexerRREAL             = 6
	ProjectLexerRBOOLEAN          = 7
	ProjectLexerRSTR              = 8
	ProjectLexerRIF               = 9
	ProjectLexerRELSE             = 10
	ProjectLexerRAND              = 11
	ProjectLexerROR               = 12
	ProjectLexerMULTILINE         = 13
	ProjectLexerINLINE            = 14
	ProjectLexerINTEGER           = 15
	ProjectLexerFLOAT             = 16
	ProjectLexerCHAR              = 17
	ProjectLexerSTRING            = 18
	ProjectLexerBOOLEAN           = 19
	ProjectLexerID                = 20
	ProjectLexerEQUAL             = 21
	ProjectLexerDOT               = 22
	ProjectLexerSEMICOLON         = 23
	ProjectLexerCOMMA             = 24
	ProjectLexerCOLON             = 25
	ProjectLexerADMIRATION        = 26
	ProjectLexerREFERENCE         = 27
	ProjectLexerLEFT_PAR          = 28
	ProjectLexerRIGHT_PAR         = 29
	ProjectLexerLEFT_KEY          = 30
	ProjectLexerRIGHT_KEY         = 31
	ProjectLexerLEFT_BRACKET      = 32
	ProjectLexerRIGHT_BRACKET     = 33
	ProjectLexerEQUEAL_EQUAL      = 34
	ProjectLexerNOTEQUAL          = 35
	ProjectLexerGREATER_THAN      = 36
	ProjectLexerLESS_THAN         = 37
	ProjectLexerGREATER_EQUALTHAN = 38
	ProjectLexerLESS_EQUEALTHAN   = 39
	ProjectLexerMUL               = 40
	ProjectLexerDIV               = 41
	ProjectLexerADD               = 42
	ProjectLexerSUB               = 43
	ProjectLexerMOD               = 44
	ProjectLexerWHITESPACE        = 45
)
